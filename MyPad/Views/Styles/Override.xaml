<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:m="http://metro.mahapps.com/winfx/xaml/controls">

    <!-- 
    ************************************************************
    |
    | オーバーライドスタイルの定義
    |
    ************************************************************
    -->
    
    <Style x:Key="Common.StatusTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Default.TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type StatusBar}}, Mode=OneWay}"/>
        <Setter Property="Padding" Value="{StaticResource Const.Gap1W}"/>
    </Style>

    <Style x:Key="Common.StatusComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource Default.ComboBox}">
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type StatusBar}}, Mode=OneWay}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type StatusBar}}, Mode=OneWay}"/>
        <Setter Property="Padding" Value="{StaticResource Const.Gap1W}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="m:TextBoxHelper.ButtonWidth" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource Default.ComboBoxItem}">
                    <Setter Property="Focusable" Value="False"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Common.StatusToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource Default.ToggleButton}">
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type StatusBar}}, Mode=OneWay}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type StatusBar}}, Mode=OneWay}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter Property="FontSize" Value="{StaticResource StatusBarFontSize}"/>
        <Setter Property="Focusable" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type StatusBar}}, Mode=OneWay}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Override.StatusBarItem" TargetType="{x:Type StatusBarItem}" BasedOn="{StaticResource Default.StatusBarItem}">
        <Setter Property="Padding" Value="0"/>
        <Style.Resources>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Common.StatusTextBlock}"/>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource Common.StatusComboBox}"/>
            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource Common.StatusToggleButton}"/>
        </Style.Resources>
    </Style>

    <Style x:Key="Override.StatusBar" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource Default.StatusBar}">
        <Setter Property="Background" Value="{DynamicResource VSColorBrush}"/>
    </Style>

    
    
    <!-- 
    ************************************************************
    |
    | リソースキーの上書き
    |
    ************************************************************
    -->

    <Style x:Key="Default.StatusBarItem" TargetType="{x:Type StatusBarItem}" BasedOn="{StaticResource Override.StatusBarItem}"/>
    <Style x:Key="Default.StatusBar" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource Override.StatusBar}"/>

    
    
    <!-- 
    ************************************************************
    |
    | 既定スタイルの上書き
    |
    ************************************************************
    -->

    <Style TargetType="{x:Type StatusBarItem}" BasedOn="{StaticResource Default.StatusBarItem}"/>
    <Style TargetType="{x:Type StatusBar}" BasedOn="{StaticResource Default.StatusBar}"/>

</ResourceDictionary>